// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  email    String    @unique
  image    String?
  role     Role      @default(user)
  accounts Account[]
  savings  Saving[]
  incomes  Income[]
  expenses Expense[]
  budgets  Budget[]
  cards    Card[]
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @map("user_id") @db.ObjectId
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Saving {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  amount Float
  goal   Float
  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id") @db.ObjectId
}

model Income {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  amount Float
  source String
  date   DateTime
  user   User     @relation(fields: [userId], references: [id])
  userId String   @map("user_id") @db.ObjectId
}

model Expense {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  amount   Float
  category String
  date     DateTime
  user     User     @relation(fields: [userId], references: [id])
  userId   String   @map("user_id") @db.ObjectId
}

model Budget {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  amount Float
  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id") @db.ObjectId
}

model Card {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  number String
  expiry DateTime
  user   User     @relation(fields: [userId], references: [id])
  userId String   @map("user_id") @db.ObjectId
}
